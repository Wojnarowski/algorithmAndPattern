package practise.mergesort;

import java.util.Arrays;

/**
 * @ClassName MergeSort
 * @Description TODO
 * @Author paul
 * @Date 2021/8/11 9:52
 * Vertion 1.0
 * -------------------------------------------------------------_ooOoo_
 * ------------------------------------------------------------o8888888o
 * ------------------------------------------------------------88"-.-"88
 * ------------------------------------------------------------(|--_--|)
 * ------------------------------------------------------------O\--=--/O
 * ---------------------------------------------------------____/`---'\____
 * -------------------------------------------------------.'--\\|-----|//--`.
 * ------------------------------------------------------/--\\|||--:--|||//--\
 * -----------------------------------------------------/--_|||||--:--|||||---\
 * -----------------------------------------------------|---|-\\\-----///-|---|
 * -----------------------------------------------------|-\_|--''\---/''--|---|
 * -----------------------------------------------------\--.-\__--`-`--___/-.-/
 * ---------------------------------------------------___`.-.'--/--.--\--`.-.-__
 * ------------------------------------------------.""-'<--`.___\_<|>_/___.'-->'"".
 * -----------------------------------------------|-|-:--`--\`.;`\-_-/`;.`/---`-:-|-|
 * -----------------------------------------------\--\-`-.---\_-__\-/__-_/---.-`-/--/
 * ---------------------------------------======`-.____`-.___\_____/___.-`____.-'======
 * -------------------------------------------------------------`=---='
 * ---------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 * -----------------------------------------------------佛祖保佑--------永无BUG
 */
public class MergeSort {

    public static void main(String[] args) {
        int []arr = {9,8,7,6,5,4,3,2,1};
        sort(arr);
        System.out.println(Arrays.toString(arr));
    }

    private static void sort(int[] arr) {
        int[] temp =new int[arr.length];
        sort(arr,0,arr.length-1,temp);
    }

    private static void sort(int[] arr, int left, int right, int[] temp) {
        if(left<right){
            int mid=left +((right-left) >>1);
            sort(arr,left,mid,temp); //左边归并排序，使得左子序列有序
            sort(arr,mid+1,right,temp); //右边归并排序，使得右子序列有序
            merge(arr,left,mid,right,temp);//右边归并排序，使得右子序列有序
        }
    }

    private static void merge(int[] arr, int left, int mid, int right, int[] temp) {
        int i=left;//左序列指针
        int j=mid+1;//右序列指针
        int t =0; //临时数组指针
        while(i<=mid && j<=right){
            if(arr[i]<arr[j]){
                temp[t++]=arr[i++];
            }
            else{
                temp[t++]=arr[j++];
            }
        }
        //将左边剩余元素填充进temp中
        while(i<=mid){
            temp[t++]=arr[i++];
        }
        //将右序列剩余元素填充进temp中
        while(j<=right){
            temp[t++]=arr[j++];
        }
        t=0;
        //将temp中的元素全部拷贝到原数组中
        while(left <= right){
            arr[left++] = temp[t++];
        }
    }
}

